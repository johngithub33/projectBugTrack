
*{
    /* reset default browser settings */
    margin: 0;
    padding: 0;

    /* tells the browser to account for any border and padding in the values you
    specify for an element's width and height. If you set an element's width to 
    100 pixels, that 100 pixels will include any border or padding you added, and 
    the content box will shrink to absorb that extra width. */
    box-sizing: border-box;

    /* global font unless overwridden */
    font-family: 'Khula', sans-serif;

}

html, body {
    padding: 0;
    margin: 0;
}

.leftcolumn{
    width: 175px;
    height: 100%;
    background-color: rgb(212, 0, 255);

    position: fixed;
    left: 0;
    top: 0;
}

.leftcolumn h6{
    height: 45px;
    line-height: 45px;
    width: 115px;
    margin: 10px auto 0 auto;
    border-radius: 4px;
    background-color: rgb(236, 236, 236);

    text-align: center;
}

.leftcolumn h6:hover{
    background-color: rgb(211, 211, 211);
}



.centercontent{
    position: absolute;
    margin: 0 0 0 175px;
}

.centersection1{}

.centersection2{
    
    font-size: 12px;
}


/* https://medium.com/evodeck/responsive-data-tables-with-css-grid-3c58ecf04723 */
.griddata{
    width: 500px;
    margin: 45px 0 0 45px;

    display: grid;

    /* 1fr means one "fraction" of the available space */
    /* grid-template-columns: repeat(5, 1fr); */
    grid-template-columns: 1fr 3fr 4fr 1fr 1fr 1fr;

    border-top: 1px solid black;
    border-right: 1px solid black;
    
}

.griddata p:nth-child(-n+6){
    font-weight: 900;
    background-color: rgb(150, 150, 150);
}

/* Selects all <p> elements where the parent is a .griddata element */
.griddata > p {
    padding: 8px 4px;
    border-left: 1px solid rgb(0, 0, 0);
    border-bottom: 1px solid black;
}

/* all squares in the table */
.griddata > p:hover{
    background-color: rgb(0, 255, 0);
}


/* structure is:

    label class=container
        input type=checkbox
        span class=checkmark
*/

/* the checkbox column of each label */
.griddata > .container{

    /* background-color: orange; */
    display: block;
    position: relative;

    border-bottom: 1px solid rgb(0, 0, 0);
    border-left: 1px solid black;
}

/* below here is to make custom checkboxes by using a span */

/* each checkbox
.griddata > .container input{
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
} */

 /* each span 
.checkmark {
    position: absolute;
    cursor: pointer;

    height: 15px; 
    width: 15px;
    margin: 0 auto;
    background-color: green;
  }

selects every .checkmark preceeded by input
checkmark is span
input:hover ~ .checkmark {
    background-color: red;
  }

input:checked ~ .checkmark {
    background-color: orange;
  } */
  
/* span=checkmark */
/* "after" the content */
/* In CSS, ::after creates a pseudo-element that is the last child of the selected element. */
/* <span> is very much like a <div> element, but <div> is a block-level element whereas a <span> is an inline element. */
/* .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

selects every .checkmark:after preceeded by input:checked
.container input:checked ~ .checkmark:after {
    display: block;
}
  
Style the checkmark/indicator
.container .checkmark:after {
    left: 1px;
    top: 1px;
    width: 5px;
    height: 10px;

    border of checkmark itself
    border: solid rgb(255, 255, 255);
    border-width: 0 5px 5px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }

end checkbox section */


.centersection2 button{
    width: 75px;
    height: 25px;
    background-color: rgb(0, 255, 0);

    border-radius: 4px;
    border-style: none;

    margin: 25px 25px 25px 425px;
}

h1, h2{
    margin: 10px;
    text-align: center;
}


form{
    width: 350px;
    margin: auto;
    border-radius: 4px;

    display: flex;
    flex-direction: column;

    border: 2px solid gray;
}

input[type="submit"]{
    width: 60px;
    display: block;
    align-self: center;
}


.searchDisplay{
    width: 700px;
    height: 250px;
    background: pink;
}