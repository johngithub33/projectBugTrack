
*{
    /* reset default browser settings */
    margin: 0;
    padding: 0;

    /* tells the browser to account for any border and padding in the values you
    specify for an element's width and height. If you set an element's width to 
    100 pixels, that 100 pixels will include any border or padding you added, and 
    the content box will shrink to absorb that extra width. */
    box-sizing: border-box;

    /* global font unless overwridden */
    font-family: 'Khula', sans-serif;

}

html, body {
    padding: 0;
    margin: 0;
}

.leftcolumn{
    width: 175px;
    height: 100%;
    background-color: rgb(212, 0, 255);

    position: fixed;
    left: 0;
    top: 0;
}

.leftcolumn h6{
    height: 45px;
    line-height: 45px;
    width: 115px;
    margin: 10px auto 0 auto;
    border-radius: 4px;
    background-color: rgb(236, 236, 236);

    text-align: center;
}

.leftcolumn h6:hover{
    background-color: rgb(211, 211, 211);
}



.centercontent{
    position: absolute;
    margin: 0 0 0 175px;
}

.centersection1{}

.centersection2{
    
    font-size: 12px;
}


/* https://medium.com/evodeck/responsive-data-tables-with-css-grid-3c58ecf04723 */
.griddata{
    width: 500px;
    margin: 45px 0 0 45px;

    display: grid;

    /* 1fr means one "fraction" of the available space */
    /* grid-template-columns: repeat(5, 1fr); */
    grid-template-columns: 1fr 3fr 4fr 1fr 1fr 1fr;

    border-top: 1px solid black;
    border-right: 1px solid black;
    
}

.griddata p:nth-child(-n+6){
    font-weight: 900;
    background-color: rgb(150, 150, 150);
}

/* Selects all <p> elements where the parent is a .griddata element */
.griddata > p {
    padding: 8px 4px;
    border-left: 1px solid rgb(0, 0, 0);
    border-bottom: 1px solid black;
}

/* all squares in the table */
.griddata > p:hover{
    background-color: rgb(0, 255, 0);
}


/* the checkbox column of divs */
.griddata > .container{
    /* padding: 8px 4px;
    border-left: 1px solid rgb(28, 240, 116);
    border-bottom: 1px solid black;
    position: relative; */
    /* transform: scale(.3); */ 

    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 32px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.griddata > .container input{
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: green;
  }

  /* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color: red;
  }

  /* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
    background-color: orange;
  }
  
/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }




.centersection2 button{
    width: 75px;
    height: 25px;
    background-color: rgb(0, 255, 0);

    border-radius: 4px;
    border-style: none;

    margin: 25px 25px 25px 425px;
}

h1, h2{
    margin: 10px;
    text-align: center;
}


form{
    width: 350px;
    margin: auto;
    border-radius: 4px;

    display: flex;
    flex-direction: column;

    border: 2px solid gray;
}

input[type="submit"]{
    width: 60px;
    display: block;
    align-self: center;
}


.searchDisplay{
    width: 700px;
    height: 250px;
    background: pink;
}